<Controls:MetroWindow
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:p="clr-namespace:MangaChecker.Properties"
	xmlns:manga="clr-namespace:MangaChecker.Views"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:viewModel="clr-namespace:MangaChecker.ViewModels"
	xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
	xmlns:tb="http://www.hardcodet.net/taskbar"
	x:Name="window"
	x:Class="MangaChecker.Windows.MainWindow"
	mc:Ignorable="d"
	Title="Manga Checker" WindowStartupLocation="CenterScreen" MinWidth="700" MinHeight="550"
	ShowIconOnTitleBar="False" ShowMaxRestoreButton="False"
	Height="520" Width="700" BorderThickness="1" GlowBrush="Black"
	d:DataContext="{d:DesignInstance {x:Type viewModel:MainWindowViewModel}, IsDesignTimeCreatable=False}"
	Icon="/MangaChecker;component/Assets/m.ico"
	NonActiveBorderBrush="{DynamicResource HighlightBrush}"
	NonActiveGlowBrush="Black"
	NonActiveWindowTitleBrush="{DynamicResource HighlightBrush}"
	Closed="MainWindow_OnClosed">
	<Window.Resources>
		<Converters:NotZeroToVisibilityConverter x:Key="NotZeroToVisibilityConverter" />
	</Window.Resources>

	<Controls:MetroWindow.RightWindowCommands>
		<Controls:WindowCommands>
			<Button ToolTip="Start/Stop" Command="{Binding StartStopCommand}">
				<materialDesign:PackIcon Kind="{Binding PausePlayButtonIcon, FallbackValue=Pause}" />
			</Button>
			<Button Command="{Binding RefreshCommand}" ToolTip="Re-Check">
				<materialDesign:PackIcon Kind="Refresh" />
			</Button>
			<Button Command="{Binding FillListCommand}" ToolTip="Home" >
				<materialDesign:PackIcon Kind="Home"/>
			</Button>
			<Button Command="{Binding NewCommand}" Content="New!"
					Visibility="{Binding NewMangas.Count, Converter={StaticResource NotZeroToVisibilityConverter}, Mode=OneWay}" />
		</Controls:WindowCommands>
	</Controls:MetroWindow.RightWindowCommands>
	<Controls:MetroWindow.LeftWindowCommands>
		<Controls:WindowCommands>
			<ToggleButton x:Name="MenuToggleButton" IsChecked="{Binding MenuToggleButton, Mode=TwoWay}" ToolTip="Menu">
				<materialDesign:PackIcon Kind="Menu"/>
			</ToggleButton>
		</Controls:WindowCommands>
	</Controls:MetroWindow.LeftWindowCommands>
	<materialDesign:DialogHost>
		
		<materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}"
								   LeftDrawerBackground="{DynamicResource MainBgColor}">
			<materialDesign:DrawerHost.LeftDrawerContent>
				<DockPanel MinWidth="212">
					<!--<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
								  DockPanel.Dock="Top"
								  HorizontalAlignment="Right" Margin="16"
								  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />-->
					<StackPanel Orientation="Vertical" Margin="0, 16">
						<Button Style="{DynamicResource MaterialDesignFlatButton}" Content="Add Manga"
								Margin="0" VerticalAlignment="Top" BorderThickness="0"
								Command="{Binding AddMangaCommand}"
								VerticalContentAlignment="Center" HorizontalContentAlignment="Left" />
						<Button Style="{DynamicResource MaterialDesignFlatButton}"
								Content="Always On Top" BorderThickness="0" Click="TopMostBtn_Click"
								VerticalContentAlignment="Center" HorizontalContentAlignment="Left" />
						<Separator IsEnabled="False" Margin="0,2,1,2" />
						<Button Style="{DynamicResource MaterialDesignFlatButton}"
								Content="Settings"
								BorderThickness="0" Command="{Binding SettingsCommand}"
								VerticalContentAlignment="Center"
								HorizontalContentAlignment="Left" />
						<Separator IsEnabled="False" Margin="0,2,1,2" />
						<Button Style="{DynamicResource MaterialDesignFlatButton}"
								Content="History"
								BorderThickness="0" Command="{Binding HistoryCommand}"
								VerticalContentAlignment="Center"
								HorizontalContentAlignment="Left" />
					</StackPanel>
				</DockPanel>
			</materialDesign:DrawerHost.LeftDrawerContent>
			<Grid Loaded="Grid_Loaded" MouseDown="Grid_MouseDown" Background="Transparent">
				
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="30" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<ListBox Grid.Column="0" SelectedItem="{Binding SelectedSite}"
						 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
				 ItemsSource="{Binding ListboxItemNames}" BorderThickness="0,0,1,1" BorderBrush="Black"/>
				<materialDesign:Transitioner Grid.Row="0"
											 SelectedIndex="{Binding SelectedIndexTransitioner, Mode=TwoWay}"
											 Grid.Column="1" BorderThickness="0,0,1,1" BorderBrush="Black">
					<manga:MainView />
					<TextBox TextChanged="DebugTextBox_TextChanged" x:Name="DebugTextBox"
							 Text="{Binding Debug, Source={x:Static p:Settings.Default}}" TextWrapping="Wrap"
							 Padding="5" Margin="10" />
					<manga:AddMenuView Padding="5" Margin="10" />
					<manga:SettingView Padding="5" Margin="10" />
					<manga:NewMangaView />
				</materialDesign:Transitioner>

				<StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left"
							Height="30">
					<Label Content="{Binding ThreadStatus}" VerticalAlignment="Center" />
					<Label Content="{Binding StatusLabel, Source={x:Static p:Settings.Default}}"
						   VerticalAlignment="Center" />
				</StackPanel>

				<Label Content="{Binding CounterLabel, Source={x:Static p:Settings.Default}}"
					   HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,0"
					   FontWeight="Bold" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="2"/>

				<tb:TaskbarIcon Grid.Row="0" Grid.Column="0" IconSource="/MangaChecker;component/Assets/m.ico">
					<tb:TaskbarIcon.ContextMenu>
						<ContextMenu>
							<MenuItem Header="Refresh" Command="{Binding RefreshCommand}"/>
							<MenuItem Header="History" Command="{Binding HistoryCommand}"/>
							<MenuItem Header="Exit" Command="{Binding CloseCommand}" />
						</ContextMenu>
					</tb:TaskbarIcon.ContextMenu>
				</tb:TaskbarIcon>
			</Grid>
		</materialDesign:DrawerHost>
	</materialDesign:DialogHost>
</Controls:MetroWindow>